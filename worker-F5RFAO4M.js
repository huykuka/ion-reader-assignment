self.addEventListener("message",async n=>{let{id:s,action:t,data:e}=n.data;try{let r;switch(t){case"decodePythonByteString":r=o(e);break;case"createBlob":r=await c(e);break;default:throw new Error(`Unknown action: ${t}`)}self.postMessage({id:s,success:!0,result:r})}catch(r){self.postMessage({id:s,success:!1,error:r.message})}});function o(n){let s=n.slice(2,-1),t=[],e=0;for(;e<s.length;)if(s.substr(e,2)==="\\x"){let r=s.substr(e+2,2);t.push(parseInt(r,16)),e+=4}else s.substr(e,2)==="\\\\"?(t.push(92),e+=2):s.substr(e,2)==="\\'"?(t.push(39),e+=2):s.substr(e,2)==="\\n"?(t.push(10),e+=2):s.substr(e,2)==="\\r"?(t.push(13),e+=2):s.substr(e,2)==="\\t"?(t.push(9),e+=2):s[e]==="\\"?(t.push(s.charCodeAt(e+1)),e+=2):(t.push(s.charCodeAt(e)),e+=1);return new Uint8Array(t)}async function c(n){let{data:s,type:t}=n,e;if(t==="pythonByteString")e=o(s);else if(t==="base64"){let r=atob(s);e=new Uint8Array(r.length);for(let a=0;a<r.length;a++)e[a]=r.charCodeAt(a)}else if(t==="raw")e=new TextEncoder().encode(s);else throw new Error(`Unsupported data type: ${t}`);return e.buffer}
